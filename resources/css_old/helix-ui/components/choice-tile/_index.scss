@import "../../components/box/config";
@import "../../components/grid/config";
@import "../../components/form/mixins/input";
@import "./mixins/hxChoiceTile";
@import "../../mixins";

hx-tile {
  @include box-size(md);

  display: inline-block;
  height: 100%;
  position: relative;
  text-align: center;
  width: 100%;

  > header {
    font-size: 1rem;
    font-weight: 700;
    margin-bottom: 0;
    color: $gray-700;
    color: var(--hxChoiceTile-header-color, $gray-700);
    line-height: 1.5rem;
    text-align: center;
  }

  > p {
    font-size: 0.75rem;
    color: $gray-700;
    color: var(--hxChoiceTile-tile-paragraph-color, $gray-700);
  }

  &.hxSm {
    $pad: 0.75rem;

    padding: $pad;

    > p {
      display: none;
    }

    hx-icon[type="checkmark"] {
      right: $pad;
      top: $pad;
    }
  }

  &.hxLg {
    $pad: 1.75rem;

    padding: $pad;

    hx-icon[type="checkmark"] {
      right: $pad;
      top: $pad;
    }
  }

  &.hxSlim {
    height: 4rem;
    width: 13.813rem;

    $pad: 0.75rem;

    padding: $pad;

    .hx-tile-icon, > p {
      display: none;
    }

    hx-icon[type="checkmark"] {
      right: $pad;
      top: $pad;
    }
  }

  > header + *,
  .hx-tile-icon + * {
    margin-top: 0.5rem;
  }

  .hx-tile-icon {
    hx-icon {
      font-size: 1.75rem;
    }
  }

  hx-icon[type="checkmark"] {
    display: none;
    font-size: 1rem;
    right: 1.25rem;
    top: 1.25rem;
  }

  &.hxSubdued {
    @include hxChoiceTile--subdued;

    &:hover {
      @include hxChoiceTile--subdued($pseudo-state: hover);
    }
  }
}

.hxRow > label.hxChoice {
  @include grid-column;
}

// Layout & Geometry
// ========== COMMON ==========
label.hxChoice {
  position: relative;
}

label.hxChoice > input {
  @include reset-focus;
  @include hxInput(visuallyHidden);

  &:checked + hx-tile {
    hx-icon[type="checkmark"] {
      display: block;
      position: absolute;
    }
  }
}

// ========== SUBDUED ==========
label.hxChoice > input + hx-tile:hover.hxSubdued,
label.hxChoice > input[disabled] + hx-tile.hxSubdued,
label.hxChoice > input[invalid] + hx-tile.hxSubdued {
  @include hxChoiceTile--subdued($pseudo-state: hover);
}

// ========== DEFAULT ==========
// NOTE: These styles may be able to go into default hx-tile defs
label.hxChoice > input + hx-tile {
  background-color: $gray-0;
  background-color: var(--hxChoiceTile-input-bgcolor, $gray-0);
  border: solid 1px $gray-400;
  border: solid 1px var(--hxChoiceTile-input-hxTile-bordercolor, $gray-400);
  color: $gray-900;
  color: var(--hxChoiceTile-input-color, $gray-900);
  cursor: pointer;

  .hx-tile-icon {
    color: $gray-400;
    color: var(--hxChoiceTile-hxTile-color, $gray-400);
  }
}

label.hxChoice > input + hx-tile:hover {
  @include hxChoiceTile($pseudo-state: hover);
}

// same as hover, with focus glow
label.hxChoice > input:focus + hx-tile {
  @include hxChoiceTile($pseudo-state: focus);
}

// ========== CHECKED ==========
label.hxChoice > input:checked + hx-tile {
  border: 1px solid $purple-300;
  border: 1px solid var(--hxChoiceTile-inputChecked-bordercolor, $purple-300);
  color: $gray-0;
  color: var(--hxChoiceTile-inputChecked-color, $gray-0);

  > hx-icon {
    color: $purple-300;
    color: var(--hxChoiceTile-inputChecked-hxicon-color, $purple-300);
  }

  .hx-tile-icon {
    color: $purple-300;
    color: var(--hxChoiceTile-checked-hxTile-color, $purple-300);
  }

  > header {
    color: $purple-300;
    color: var(--hxChoiceTile-checked-hxTile-header-color, $purple-300);
  }

  > p {
    color: $gray-950;
    color: var(--hxChoiceTile-checked-paragraph-color, $gray-950);
  }

  // DEPRECATED: remove in v1.0.0
  hx-tile-description {
    color: $gray-900;
    color: var(--hxChoiceTile-checked-description-color, $gray-900);
  }
}

// ========== INVALID ==========
label.hxChoice > input[invalid] + hx-tile {
  @include hxChoiceTile--invalid;

  > p {
    color: $gray-900;
    color: var(--hxChoiceTile-invalid-paragraph-color, $gray-900);
  }

  // DEPRECATED: remove in v1.0.0
  hx-tile-description {
    color: $gray-900;
    color: var(--hxChoiceTile-invalid-description-color, $gray-900);
  }

  .hx-tile-icon {
    color: inherit;
  }

  > header {
    color: inherit;
  }

  hx-icon[type="checkmark"] {
    color: inherit;
  }
}

label.hxChoice > input[invalid] + hx-tile:hover {
  @include hxChoiceTile--invalid($pseudo-state: hover);
}

label.hxChoice > input[invalid]:focus + hx-tile {
  @include hxChoiceTile--invalid($pseudo-state: focus);
}

// ========== DISABLED ==========
label.hxChoice > input[disabled] + hx-tile,
label.hxChoice > input[disabled] + hx-tile:hover {
  @include hxChoiceTile--disabled;

  > p {
    color: $gray-500;
    color: var(--hxChoiceTile-disabled-paragraph-color, $gray-500);
  }

  // DEPRECATED: remove in v1.0.0
  hx-tile-description {
    color: $gray-500;
    color: var(--hxChoiceTile-disabled-description-color, $gray-500);
  }

  > header {
    color: $gray-500;
    color: var(--hxChoiceTile-disabled-header-color, $gray-500);
  }

  hx-icon {
    color: $gray-400;
    color: var(--hxChoiceTile-disabled-hxIcon-color, $gray-400);
  }
}

// DEPRECATED: remove in v1.0.0
hx-tile-description {
  display: block;
  font-size: 0.75rem;
}

hx-tile-title {
  display: block;
  font-size: 1rem;
  font-weight: 700;
}

hx-tile {
  position: relative;

  hx-tile-title {
    margin-bottom: 0;
  }

  &.hxSm {
    hx-tile-description {
      display: none;
    }
  }

  hx-tile-title + * {
    margin-top: 0.5rem;
  }
}
